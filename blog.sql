-- phpMyAdmin SQL Dump
-- version 4.7.4
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: 2018-03-05 08:14:12
-- 服务器版本： 10.1.29-MariaDB
-- PHP Version: 7.1.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `blog`
--

-- --------------------------------------------------------

--
-- 表的结构 `blog_article`
--

CREATE TABLE `blog_article` (
  `id` int(11) NOT NULL,
  `art_title` varchar(100) DEFAULT NULL,
  `art_tag` varchar(100) DEFAULT NULL,
  `art_description` varchar(255) DEFAULT NULL,
  `art_thumb` varchar(255) DEFAULT NULL,
  `art_content` text,
  `art_time` int(11) DEFAULT NULL,
  `art_editor` varchar(50) DEFAULT NULL,
  `art_view` int(11) DEFAULT '0',
  `cate_id` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='鏂囩珷';

--
-- 转存表中的数据 `blog_article`
--

INSERT INTO `blog_article` (`id`, `art_title`, `art_tag`, `art_description`, `art_thumb`, `art_content`, `art_time`, `art_editor`, `art_view`, `cate_id`) VALUES
(20, 'php', 'php', '标量类型声明\r\nPHP 7 中的函数的形参类型声明可以是标量了。在 PHP 5 中只能是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。', NULL, '<h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">标量类型声明</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">PHP 7 中的函数的形参类型声明可以是标量了。在 PHP 5 中只能是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php//&nbsp;强制模式function&nbsp;sumOfInts(int&nbsp;...$ints){\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;array_sum($ints);}var_dump(sumOfInts(2,&nbsp;&#39;3&#39;,&nbsp;4.1));</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">int(9)</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">需要注意的是上文提到的严格模式的问题在这里同样适用：强制模式（默认，既强制类型转换）下还是会对不符合预期的参数进行强制类型转换，严格模式下则触发 TypeError 的致命错误。</p><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">返回值类型声明</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">PHP 7 增加了对返回类型声明的支持。 类似于参数类型声明，返回类型声明指明了函数返回值的类型。可用的类型与参数声明中可用的类型相同。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?phpfunction&nbsp;arraysSum(array&nbsp;...$arrays):&nbsp;array{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;array_map(function(array&nbsp;$array):&nbsp;int&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;array_sum($array);\r\n&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;$arrays);}print_r(arraysSum([1,2,3],&nbsp;[4,5,6],&nbsp;[7,8,9]));</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">Array(\r\n&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;6\r\n&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;15\r\n&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;24)</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">NULL 合并运算符</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">由于日常使用中存在大量同时使用三元表达式和 isset()的情况，NULL 合并运算符使得变量存在且值不为NULL， 它就会返回自身的值，否则返回它的第二个操作数。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">实例如下：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php//&nbsp;如果&nbsp;$_GET[&#39;user&#39;]&nbsp;不存在返回&nbsp;&#39;nobody&#39;，否则返回&nbsp;$_GET[&#39;user&#39;]&nbsp;的值$username&nbsp;=&nbsp;$_GET[&#39;user&#39;]&nbsp;??&nbsp;&#39;nobody&#39;;//&nbsp;类似的三元运算符$username&nbsp;=&nbsp;isset($_GET[&#39;user&#39;])&nbsp;?&nbsp;$_GET[&#39;user&#39;]&nbsp;:&nbsp;&#39;nobody&#39;;?&gt;</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">太空船操作符（组合比较符）</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">太空船操作符用于比较两个表达式。当$a大于、等于或小于$b时它分别返回-1、0或1。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">实例如下：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php//&nbsp;整型echo&nbsp;1&nbsp;&lt;=&gt;&nbsp;1;&nbsp;//&nbsp;0echo&nbsp;1&nbsp;&lt;=&gt;&nbsp;2;&nbsp;//&nbsp;-1echo&nbsp;2&nbsp;&lt;=&gt;&nbsp;1;&nbsp;//&nbsp;1//&nbsp;浮点型echo&nbsp;1.5&nbsp;&lt;=&gt;&nbsp;1.5;&nbsp;//&nbsp;0echo&nbsp;1.5&nbsp;&lt;=&gt;&nbsp;2.5;&nbsp;//&nbsp;-1echo&nbsp;2.5&nbsp;&lt;=&gt;&nbsp;1.5;&nbsp;//&nbsp;1\r\n&nbsp;//&nbsp;字符串echo&nbsp;&quot;a&quot;&nbsp;&lt;=&gt;&nbsp;&quot;a&quot;;&nbsp;//&nbsp;0echo&nbsp;&quot;a&quot;&nbsp;&lt;=&gt;&nbsp;&quot;b&quot;;&nbsp;//&nbsp;-1echo&nbsp;&quot;b&quot;&nbsp;&lt;=&gt;&nbsp;&quot;a&quot;;&nbsp;//&nbsp;1?&gt;</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">通过 define() 定义常量数组</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">实例如下：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php\r\ndefine(&#39;ANIMALS&#39;,&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;dog&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;cat&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;bird&#39;]);echo&nbsp;ANIMALS[1];&nbsp;//&nbsp;输出&nbsp;&quot;cat&quot;?&gt;</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">匿名类</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">现在支持通过new class 来实例化一个匿名类，实例如下：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?phpinterface&nbsp;Logger&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;log(string&nbsp;$msg);}class&nbsp;Application&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$logger;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;getLogger():&nbsp;Logger&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;logger;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;setLogger(Logger&nbsp;$logger)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;logger&nbsp;=&nbsp;$logger;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}}$app&nbsp;=&nbsp;new&nbsp;Application;$app-&gt;setLogger(new&nbsp;class&nbsp;implements&nbsp;Logger&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;log(string&nbsp;$msg)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$msg;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}});var_dump($app-&gt;getLogger());?&gt;</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">object(class@anonymous)#2&nbsp;(0)&nbsp;{}</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">Unicode codepoint 转译语法</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">这接受一个以16进制形式的 Unicode codepoint，并打印出一个双引号或heredoc包围的 UTF-8 编码格式的字符串。 可以接受任何有效的 codepoint，并且开头的 0 是可以省略的。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">echo&nbsp;&quot;\\u{aa}&quot;;echo&nbsp;&quot;\\u{0000aa}&quot;;echo&nbsp;&quot;\\u{9999}&quot;;</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">ªª&nbsp;(same&nbsp;as&nbsp;before&nbsp;but&nbsp;with&nbsp;optional&nbsp;leading&nbsp;0&#39;s)\r\n香</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">Closure::call()</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">Closure::call() 现在有着更好的性能，简短干练的暂时绑定一个方法到对象上闭包并调用它。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?phpclass&nbsp;A&nbsp;{private&nbsp;$x&nbsp;=&nbsp;1;}//&nbsp;Pre&nbsp;PHP&nbsp;7&nbsp;代码$getXCB&nbsp;=&nbsp;function()&nbsp;{return&nbsp;$this-&gt;x;};$getX&nbsp;=&nbsp;$getXCB-&gt;bindTo(new&nbsp;A,&nbsp;&#39;A&#39;);&nbsp;//&nbsp;intermediate&nbsp;closureecho&nbsp;$getX();//&nbsp;PHP&nbsp;7+&nbsp;代码$getX&nbsp;=&nbsp;function()&nbsp;{return&nbsp;$this-&gt;x;};echo&nbsp;$getX-&gt;call(new&nbsp;A);</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">11</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">为unserialize()提供过滤</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">这个特性旨在提供更安全的方式解包不可靠的数据。它通过白名单的方式来防止潜在的代码注入。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php//&nbsp;转换对象为&nbsp;__PHP_Incomplete_Class&nbsp;对象$data&nbsp;=&nbsp;unserialize($foo,&nbsp;[&quot;allowed_classes&quot;&nbsp;=&gt;&nbsp;false]);//&nbsp;转换对象为&nbsp;__PHP_Incomplete_Class&nbsp;对象，除了&nbsp;MyClass&nbsp;和&nbsp;MyClass2$data&nbsp;=&nbsp;unserialize($foo,&nbsp;[&quot;allowed_classes&quot;&nbsp;=&gt;&nbsp;[&quot;MyClass&quot;,&nbsp;&quot;MyClass2&quot;]);//&nbsp;默认接受所有类$data&nbsp;=&nbsp;unserialize($foo,&nbsp;[&quot;allowed_classes&quot;&nbsp;=&gt;&nbsp;true]);</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">IntlChar</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">新增加的 IntlChar 类旨在暴露出更多的 ICU 功能。这个类自身定义了许多静态方法用于操作多字符集的 unicode 字符。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php\r\nprintf(&#39;%x&#39;,&nbsp;IntlChar::CODEPOINT_MAX);echo&nbsp;IntlChar::charName(&#39;@&#39;);var_dump(IntlChar::ispunct(&#39;!&#39;));</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">10ffffCOMMERCIAL&nbsp;ATbool(true)</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">若要使用此类，请先安装Intl扩展</p><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">预期</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">预期是向后兼用并增强之前的 assert() 的方法。 它使得在生产环境中启用断言为零成本，并且提供当断言失败时抛出特定异常的能力。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php\r\nini_set(&#39;assert.exception&#39;,&nbsp;1);class&nbsp;CustomError&nbsp;extends&nbsp;AssertionError&nbsp;{}assert(false,&nbsp;new&nbsp;CustomError(&#39;Some&nbsp;error&nbsp;message&#39;));?&gt;</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">Fatal&nbsp;error:&nbsp;Uncaught&nbsp;CustomError:&nbsp;Some&nbsp;error&nbsp;message</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">use 加强</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">从同一 namespace 导入的类、函数和常量现在可以通过单个 use 语句 一次性导入了。</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php//&nbsp;&nbsp;PHP&nbsp;7&nbsp;之前版本用法use&nbsp;some\\namespace\\ClassA;use&nbsp;some\\namespace\\ClassB;use&nbsp;some\\namespace\\ClassC&nbsp;as&nbsp;C;use&nbsp;function&nbsp;some\\namespace\\fn_a;use&nbsp;function&nbsp;some\\namespace\\fn_b;use&nbsp;function&nbsp;some\\namespace\\fn_c;use&nbsp;const&nbsp;some\\namespace\\ConstA;use&nbsp;const&nbsp;some\\namespace\\ConstB;use&nbsp;const&nbsp;some\\namespace\\ConstC;//&nbsp;PHP&nbsp;7+&nbsp;用法use&nbsp;some\\namespace\\{ClassA,&nbsp;ClassB,&nbsp;ClassC&nbsp;as&nbsp;C};use&nbsp;function&nbsp;some\\namespace\\{fn_a,&nbsp;fn_b,&nbsp;fn_c};use&nbsp;const&nbsp;some\\namespace\\{ConstA,&nbsp;ConstB,&nbsp;ConstC};?&gt;</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">Generator 加强</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">增强了Generator的功能，这个可以实现很多先进的特性</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php&lt;?phpfunction&nbsp;gen(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;2;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;from&nbsp;gen2();}function&nbsp;gen2(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;3;\r\n&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;4;}foreach&nbsp;(gen()&nbsp;as&nbsp;$val){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$val,&nbsp;PHP_EOL;}?&gt;</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">1234</pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\"/><h2 style=\"border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">整除</h2><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">新增了整除函数 intdiv(),使用实例：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">&lt;?php\r\nvar_dump(intdiv(10,&nbsp;3));?&gt;</pre><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);\">以上实例会输出：</p><pre class=\"prettyprint prettyprinted\" style=\"border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial; margin: 15px auto; padding: 10px 15px; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; white-space: pre-wrap; word-break: break-all; word-wrap: break-word; background-image: url(&quot;/images/codecolorer_bg.gif&quot;); background-position: center top; background-color: rgb(251, 251, 251); color: rgb(51, 51, 51);\">int(3)</pre><p><br/></p>', 1518420363, 'MinBo', 5, 18),
(21, '12121', '121', '121', NULL, '<p>121212</p>', 1518489965, 'MinBo', 27, 18);

-- --------------------------------------------------------

--
-- 表的结构 `blog_category`
--

CREATE TABLE `blog_category` (
  `id` int(10) NOT NULL,
  `cate_name` varchar(50) DEFAULT NULL,
  `cate_title` varchar(255) DEFAULT NULL,
  `cate_keywords` varchar(255) DEFAULT NULL,
  `cate_description` varchar(255) DEFAULT NULL,
  `cate_view` int(10) DEFAULT '0',
  `cate_order` tinyint(4) DEFAULT NULL,
  `cate_pid` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='//鍒嗙被';

--
-- 转存表中的数据 `blog_category`
--

INSERT INTO `blog_category` (`id`, `cate_name`, `cate_title`, `cate_keywords`, `cate_description`, `cate_view`, `cate_order`, `cate_pid`) VALUES
(18, 'PHP', 'PHP', 'PHP，PHP基础，PHP函数', 'PHP基础知识整理', 133, 1, 0),
(19, 'Mysql', 'Mysql数据库', '数据库，sql,mysql', '数据库基础知识整理', 0, 2, 0),
(20, 'javascript', 'javascript', 'javascript', ' javascript基础知识', 0, 3, 0),
(21, 'linux', 'linux', 'linux', 'linux常用命令', 0, 4, 0),
(22, 'git', 'git版本控制', 'git版本控制', 'git版本控制的使用，创建原仓库，多人合作，分支合并，解决冲突', 0, 5, 0),
(23, 'redis', 'redis', 'redis', 'redis引用，安装，配置，卸载', 0, 6, 0);

-- --------------------------------------------------------

--
-- 表的结构 `blog_config`
--

CREATE TABLE `blog_config` (
  `id` int(11) NOT NULL,
  `conf_title` varchar(50) DEFAULT NULL,
  `conf_name` varchar(50) DEFAULT NULL,
  `conf_order` int(11) DEFAULT NULL,
  `conf_tips` varchar(255) DEFAULT NULL,
  `conf_content` text,
  `field_type` varchar(50) DEFAULT NULL,
  `field_value` varchar(255) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='閰嶇疆';

--
-- 转存表中的数据 `blog_config`
--

INSERT INTO `blog_config` (`id`, `conf_title`, `conf_name`, `conf_order`, `conf_tips`, `conf_content`, `field_type`, `field_value`) VALUES
(9, 'MinBo', 'php程序员', 0, '', NULL, 'input', '');

-- --------------------------------------------------------

--
-- 表的结构 `blog_links`
--

CREATE TABLE `blog_links` (
  `id` int(10) UNSIGNED NOT NULL,
  `link_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `link_title` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `link_url` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `link_order` int(11) NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='鍙嬫儏閾炬帴';

-- --------------------------------------------------------

--
-- 表的结构 `blog_navs`
--

CREATE TABLE `blog_navs` (
  `id` int(11) NOT NULL,
  `nav_name` varchar(50) DEFAULT NULL,
  `nav_alias` varchar(50) DEFAULT NULL,
  `nav_url` varchar(255) DEFAULT NULL,
  `nav_order` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='瀵艰埅';

-- --------------------------------------------------------

--
-- 表的结构 `blog_users`
--

CREATE TABLE `blog_users` (
  `id` int(10) NOT NULL,
  `user_name` varchar(50) DEFAULT NULL,
  `user_pass` varchar(255) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='//绠＄悊鍛?';

--
-- 转存表中的数据 `blog_users`
--

INSERT INTO `blog_users` (`id`, `user_name`, `user_pass`) VALUES
(2, 'admin', 'eyJpdiI6IjdubWRwMUExejRtTzhNdjd1cHJ4Z0E9PSIsInZhbHVlIjoibUtiOTMyXC9QcG9ZXC9na2pQbFdleVZnPT0iLCJtYWMiOiI3OTMwMDAzZTFhZWExMTM5NmI4YzIwZjhkMzFiZjhmNGNlYzE3NGE0YjIwYjc4ZmMwMGVmNTIwMWQ0MDZmNGM0In0');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `blog_article`
--
ALTER TABLE `blog_article`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_category`
--
ALTER TABLE `blog_category`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_config`
--
ALTER TABLE `blog_config`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_links`
--
ALTER TABLE `blog_links`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_navs`
--
ALTER TABLE `blog_navs`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_users`
--
ALTER TABLE `blog_users`
  ADD PRIMARY KEY (`id`);

--
-- 在导出的表使用AUTO_INCREMENT
--

--
-- 使用表AUTO_INCREMENT `blog_article`
--
ALTER TABLE `blog_article`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- 使用表AUTO_INCREMENT `blog_category`
--
ALTER TABLE `blog_category`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- 使用表AUTO_INCREMENT `blog_config`
--
ALTER TABLE `blog_config`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- 使用表AUTO_INCREMENT `blog_links`
--
ALTER TABLE `blog_links`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- 使用表AUTO_INCREMENT `blog_navs`
--
ALTER TABLE `blog_navs`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- 使用表AUTO_INCREMENT `blog_users`
--
ALTER TABLE `blog_users`
  MODIFY `id` int(10) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
